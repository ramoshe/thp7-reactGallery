{"version":3,"sources":["components/SearchForm.js","components/MainNav.js","components/NotFound.js","components/Photo.js","components/PhotoContainer.js","config.js","components/PhotosForNav.js","components/404Error.js","App.js","reportWebVitals.js","index.js"],"names":["SearchForm","state","searchText","onSearchChange","e","setState","target","value","handleSubmit","preventDefault","query","path","props","onSearch","currentTarget","reset","history","push","className","onSubmit","this","type","onChange","name","placeholder","required","fill","height","viewBox","width","xmlns","d","Component","withRouter","MainNav","to","process","NotFound","Photo","url","alt","src","PhotoContainer","onUpdate","title","photos","data","length","map","photo","server","id","secret","apiKey","CatPhotos","BirdPhotos","DogPhotos","axios","get","then","response","catch","error","console","log","API_KEY","Error","App","loading","currentTitle","performSearch","basename","style","color","exact","render","match","params","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.34d9ce8a.chunk.js","sourcesContent":["import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\n\nclass SearchForm extends Component {\n  \n    static propTypes = {\n        onSearch: PropTypes.func\n    }\n\n    state = {\n        searchText: ''\n    }\n    \n    /**\n     * Set the \"searchText\" state based on input field value\n     * @param {Object} e - the event object\n     */\n    onSearchChange = e => {\n        this.setState({ searchText: e.target.value });\n    }\n    \n    /**\n     * Call the search callback function using state when form is submitted\n     * @param {Object} e - the event object\n     */\n    handleSubmit = e => {\n        e.preventDefault();\n        const query = this.state.searchText;\n        const path = `/search/${query}`;\n        this.props.onSearch(query);\n        e.currentTarget.reset();\n        this.props.history.push(path);\n    }\n      \n    render() {\n        return (\n            <form className=\"search-form\" onSubmit={this.handleSubmit}>\n                <input \n                    type=\"search\" \n                    onChange={this.onSearchChange}\n                    name=\"search\" \n                    placeholder=\"Search\" \n                    required \n                />\n                <button type=\"submit\" className=\"search-button\">\n                    <svg fill=\"#fff\" height=\"24\" viewBox=\"0 0 23 23\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n                        <path d=\"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\" />\n                        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n                    </svg>\n                </button>\n            </form>\n        );\n    }\n}\n\nexport default withRouter(SearchForm);","import { NavLink } from \"react-router-dom\";\n\nconst MainNav = () => \n    <nav className=\"main-nav\">\n        <ul> \n            <li><NavLink to={`${process.env.PUBLIC_URL}/cat`}>cat</NavLink></li>\n            <li><NavLink to={`${process.env.PUBLIC_URL}/bird`}>bird</NavLink></li>\n            <li><NavLink to={`${process.env.PUBLIC_URL}/dog`}>dog</NavLink></li>\n        </ul>\n    </nav>;\n\nexport default MainNav;","const NotFound = () =>\n    <li className=\"not-found\">\n        <h3>No Results Found</h3>\n        <p>You search did not return any results. Please try again.</p>\n    </li>;\n\nexport default NotFound;","import PropTypes from 'prop-types';\n\nconst Photo = ({ url, alt }) =>\n    <li>\n        <img src={ url } alt={ alt } />\n    </li>;\n\nPhoto.propTypes = {\n    url: PropTypes.string,\n    alt: PropTypes.string\n}\n\nexport default Photo;","import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport NotFound from './NotFound';\nimport Photo from './Photo';\n\nclass PhotoContainer extends Component {\n\n    static propTypes = {\n        title: PropTypes.string,\n        data: PropTypes.arrayOf(PropTypes.shape({\n            id: PropTypes.string,\n            title: PropTypes.string,\n            server: PropTypes.string,\n            secret: PropTypes.string\n        })),\n        onUpdate: PropTypes.func\n    }\n\n    componentDidUpdate() {\n        this.props.onUpdate(this.props.title);\n    }\n\n    render() {\n        const { data, title } = this.props;\n        let photos;\n        if (data.length > 0) {\n            photos = data.map(photo => {\n                photo.url = `https://live.staticflickr.com/${photo.server}/${photo.id}_${photo.secret}.jpg`;\n                return <Photo url={photo.url} alt={photo.title} key={ photo.id } />\n            });\n        } else {\n            photos = <NotFound />;\n        }\n    \n        return (\n            <div className=\"photo-container\">\n                <h2>{ title } Photos</h2>\n                <ul>\n                    { photos }\n                </ul>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(PhotoContainer);","export const apiKey = '24229658e3a09abf2cc3c88350cd00c1';\n","import axios from 'axios';\nimport { apiKey } from '../config';\n\nlet CatPhotos = {};\nlet BirdPhotos = {};\nlet DogPhotos = {};\n\naxios.get(`https://www.flickr.com/services/rest/?method=flickr.photos.search&api_key=${apiKey}&tags=cat&is_getty=true&per_page=24&format=json&nojsoncallback=1`)\n    .then(response => {\n        CatPhotos = response.data.photos.photo;\n    })\n    .catch(error => {\n        console.log('Error fetching and parsing data', error);\n    });\n\naxios.get(`https://www.flickr.com/services/rest/?method=flickr.photos.search&api_key=${process.env.API_KEY}&tags=bird&is_getty=true&per_page=24&format=json&nojsoncallback=1`)\n    .then(response => {\n        BirdPhotos = response.data.photos.photo;\n    })\n    .catch(error => {\n        console.log('Error fetching and parsing data', error);\n    });\n\naxios.get(`https://www.flickr.com/services/rest/?method=flickr.photos.search&api_key=${process.env.API_KEY}&tags=dog&is_getty=true&per_page=24&format=json&nojsoncallback=1`)\n    .then(response => {\n        DogPhotos = response.data.photos.photo;\n    })\n    .catch(error => {\n        console.log('Error fetching and parsing data', error);\n    });\n\nexport { CatPhotos, BirdPhotos, DogPhotos };\n","const Error = () =>\n    <div className=\"error-container\">\n        <h2>Uh oh! Page doesn't exist!</h2>\n        <p>Use the buttons above or the search bar to load a photo gallery.</p>\n    </div>;\n\nexport default Error;","import { Component } from 'react';\nimport axios from 'axios';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport SearchForm from './components/SearchForm';\nimport MainNav from './components/MainNav';\nimport PhotoContainer from './components/PhotoContainer';\nimport { CatPhotos, BirdPhotos, DogPhotos } from './components/PhotosForNav';\nimport Error from './components/404Error';\nimport { apiKey } from './config';\n\nclass App extends Component {\n    \n    state = {\n        data: {},\n        loading: true,\n        currentTitle: 'sunset'\n    }\n\n    componentDidMount() {\n        this.performSearch(this.state.currentTitle);\n    }\n\n    /**\n     * Get flickr photo data based on the query\n     * @param {string} query - search query term(s) \n     */\n    performSearch = (query) => {\n        console.log(process.env.API_KEY);\n        this.setState({ loading: true });\n        axios.get(`https://www.flickr.com/services/rest/?method=flickr.photos.search&api_key=${apiKey}&tags=${query}&is_getty=true&per_page=24&format=json&nojsoncallback=1`)\n            .then(response => {\n                this.setState({\n                    data: response.data.photos.photo,\n                    loading: false,\n                    currentTitle: query\n                });\n            })\n            .catch(error => {\n                console.log('Error fetching and parsing data', error);\n            });\n    }\n    \n    render() {\n        return (\n            <BrowserRouter basename=\"/thp7-reactGallery\">\n                <div className=\"container\">\n                    <SearchForm onSearch={this.performSearch} />\n                    <MainNav />\n                    { (this.state.loading)\n                     ? <h2 style={{color:\"silver\"}}>Loading...</h2>\n                     : ( <Switch>\n                        <Route exact path={`${process.env.PUBLIC_URL}/`} render={ () => \n                            <PhotoContainer \n                                title={this.state.currentTitle}\n                                data={this.state.data} \n                                onUpdate={this.performSearch} /> } />\n\n                        <Route path={`${process.env.PUBLIC_URL}/cat`} render={ () => \n                            <PhotoContainer title={'cat'} data={CatPhotos} \n                                onUpdate={this.performSearch} /> } />\n                        <Route path={`${process.env.PUBLIC_URL}/bird`} render={ () => \n                            <PhotoContainer title={'bird'} data={BirdPhotos} \n                                onUpdate={this.performSearch} /> } />\n                        <Route path={`${process.env.PUBLIC_URL}/dog`} render={ () => \n                            <PhotoContainer title={'dog'} data={DogPhotos} \n                                onUpdate={this.performSearch} /> } />\n                        \n                        <Route path={`${process.env.PUBLIC_URL}/search/:query`} render={ ( {match} ) => \n                            <PhotoContainer \n                                title={match.params.query}\n                                data={this.state.data}\n                                onUpdate={this.performSearch} /> } />\n\n                        <Route component={Error} />\n                    </Switch> )}\n                </div>\n            </BrowserRouter>\n        );\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}